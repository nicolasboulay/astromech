#############################################################################
# Makefile for building: ia
# Generated by qmake (2.01a) (Qt 4.2.3) on: jeu. mai 17 21:57:18 2007
# Project:  ia.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile ia.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
LEX           = flex
YACC          = yacc
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -D_REENTRANT -Wall -W  $(DEFINES)
CXXFLAGS      = -pipe -O2 -g -D_REENTRANT -Wall -W  $(DEFINES)
LEXFLAGS      = 
YACCFLAGS     = -d
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/X11R6/lib -L/usr/lib -lXext -lX11 -lm -lpthread -lQtGui -lQtCore
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		gui.cpp \
		serial.cpp \
		trame_binary.cpp \
		trame_out.cpp \
		trame_in.cpp \
		manager.cpp \
		task_rt.cpp \
		comportement_test.cpp \
		comportement_endofmatch.cpp \
		comportement_navigation.cpp \
		comportement_strategie.cpp \
		comportement_async.cpp \
		comportement_eye.cpp \
		barillet.cpp \
		temporal_sequence.cpp \
		video.cpp \
		video-pwc.cpp \
		traitement_cone.cpp \
		panier.cpp \
		robot_adverse.cpp \
		eye_processing.cpp \
		obstacles.cpp \
		geom2D.cpp \
		algoPlanifTraj.cpp \
		deplacement.cpp \
		servo.cpp \
		lecteur.cpp moc_gui.cpp \
		moc_task_rt.cpp \
		moc_comportement.cpp \
		moc_comportement_async.cpp \
		moc_comportement_eye.cpp \
		moc_traitement_cone.cpp
OBJECTS       = main.o \
		gui.o \
		serial.o \
		trame_binary.o \
		trame_out.o \
		trame_in.o \
		manager.o \
		task_rt.o \
		comportement_test.o \
		comportement_endofmatch.o \
		comportement_navigation.o \
		comportement_strategie.o \
		comportement_async.o \
		comportement_eye.o \
		barillet.o \
		temporal_sequence.o \
		video.o \
		video-pwc.o \
		traitement_cone.o \
		panier.o \
		robot_adverse.o \
		eye_processing.o \
		obstacles.o \
		geom2D.o \
		algoPlanifTraj.o \
		deplacement.o \
		servo.o \
		lecteur.o \
		moc_gui.o \
		moc_task_rt.o \
		moc_comportement.o \
		moc_comportement_async.o \
		moc_comportement_eye.o \
		moc_traitement_cone.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/x11.prf \
		/usr/share/qt4/mkspecs/features/unix/x11inc.prf \
		/usr/share/qt4/mkspecs/features/unix/x11lib.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		ia.pro
QMAKE_TARGET  = ia
DESTDIR       = 
TARGET        = ia

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: ia.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/x11.prf \
		/usr/share/qt4/mkspecs/features/unix/x11inc.prf \
		/usr/share/qt4/mkspecs/features/unix/x11lib.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf
	$(QMAKE) -unix -o Makefile ia.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/x11.prf:
/usr/share/qt4/mkspecs/features/unix/x11inc.prf:
/usr/share/qt4/mkspecs/features/unix/x11lib.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile ia.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/ia1.0.0 || $(MKDIR) .tmp/ia1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/ia1.0.0/ && $(COPY_FILE) --parents gui.h serial.h trame_binary.h common.h trame_out.h trame_in.h manager.h task_rt.h comportement_dummy.h comportement.h comportement_defaut.h comportement_test.h comportement_endofmatch.h comportement_navigation.h comportement_strategie.h comportement_async.h comportement_eye.h barillet.h temporal_sequence.h video.h video-pwc.h traitement_cone.h panier.h robot_adverse.h eye_processing.h video_processing.h obstacles.h geom2D.h algoPlanifTraj.h deplacement.h servo.h lecteur.h .tmp/ia1.0.0/ && $(COPY_FILE) --parents main.cpp gui.cpp serial.cpp trame_binary.cpp trame_out.cpp trame_in.cpp manager.cpp task_rt.cpp comportement_test.cpp comportement_endofmatch.cpp comportement_navigation.cpp comportement_strategie.cpp comportement_async.cpp comportement_eye.cpp barillet.cpp temporal_sequence.cpp video.cpp video-pwc.cpp traitement_cone.cpp panier.cpp robot_adverse.cpp eye_processing.cpp obstacles.cpp geom2D.cpp algoPlanifTraj.cpp deplacement.cpp servo.cpp lecteur.cpp .tmp/ia1.0.0/ && (cd `dirname .tmp/ia1.0.0` && $(TAR) ia1.0.0.tar ia1.0.0 && $(COMPRESS) ia1.0.0.tar) && $(MOVE) `dirname .tmp/ia1.0.0`/ia1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/ia1.0.0


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


/usr/bin/moc-qt4:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_gui.cpp moc_task_rt.cpp moc_comportement.cpp moc_comportement_async.cpp moc_comportement_eye.cpp moc_traitement_cone.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_gui.cpp moc_task_rt.cpp moc_comportement.cpp moc_comportement_async.cpp moc_comportement_eye.cpp moc_traitement_cone.cpp
moc_gui.cpp: task_rt.h \
		trame_out.h \
		trame_binary.h \
		common.h \
		trame_in.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		gui.h \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui.h -o moc_gui.cpp

moc_task_rt.cpp: trame_out.h \
		trame_binary.h \
		common.h \
		trame_in.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		task_rt.h \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) task_rt.h -o moc_task_rt.cpp

moc_comportement.cpp: trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		comportement.h \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) comportement.h -o moc_comportement.cpp

moc_comportement_async.cpp: trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		comportement.h \
		comportement_async.h \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) comportement_async.h -o moc_comportement_async.cpp

moc_comportement_eye.cpp: trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		comportement_async.h \
		comportement.h \
		comportement_eye.h \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) comportement_eye.h -o moc_comportement_eye.cpp

moc_traitement_cone.cpp: video-pwc.h \
		video.h \
		CImg.h \
		/usr/src/linux/drivers/media/video/pwc/pwc-ioctl.h \
		traitement_cone.h \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) traitement_cone.h -o moc_traitement_cone.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 

####### Compile

main.o: main.cpp gui.h \
		task_rt.h \
		trame_out.h \
		trame_binary.h \
		common.h \
		trame_in.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		CImg.h \
		video.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

gui.o: gui.cpp gui.h \
		task_rt.h \
		trame_out.h \
		trame_binary.h \
		common.h \
		trame_in.h \
		internal_state.h \
		robot_adverse.h \
		panier.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gui.o gui.cpp

serial.o: serial.cpp serial.h \
		trame_binary.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serial.o serial.cpp

trame_binary.o: trame_binary.cpp trame_binary.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trame_binary.o trame_binary.cpp

trame_out.o: trame_out.cpp trame_out.h \
		trame_binary.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trame_out.o trame_out.cpp

trame_in.o: trame_in.cpp trame_in.h \
		trame_binary.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trame_in.o trame_in.cpp

manager.o: manager.cpp manager.h \
		trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h \
		comportement.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		comportement_defaut.h \
		comportement_dummy.h \
		comportement_test.h \
		barillet.h \
		servo.h \
		comportement_endofmatch.h \
		comportement_navigation.h \
		traitement_cone.h \
		video-pwc.h \
		video.h \
		CImg.h \
		/usr/src/linux/drivers/media/video/pwc/pwc-ioctl.h \
		comportement_strategie.h \
		geom2D.h \
		comportement_eye.h \
		comportement_async.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o manager.o manager.cpp

task_rt.o: task_rt.cpp manager.h \
		trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h \
		comportement.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		serial.h \
		task_rt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o task_rt.o task_rt.cpp

comportement_test.o: comportement_test.cpp comportement.h \
		trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		comportement_test.h \
		barillet.h \
		servo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o comportement_test.o comportement_test.cpp

comportement_endofmatch.o: comportement_endofmatch.cpp comportement.h \
		trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		comportement_endofmatch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o comportement_endofmatch.o comportement_endofmatch.cpp

comportement_navigation.o: comportement_navigation.cpp comportement_navigation.h \
		trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		comportement.h \
		traitement_cone.h \
		video-pwc.h \
		video.h \
		CImg.h \
		/usr/src/linux/drivers/media/video/pwc/pwc-ioctl.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o comportement_navigation.o comportement_navigation.cpp

comportement_strategie.o: comportement_strategie.cpp common.h \
		trame_in.h \
		trame_binary.h \
		trame_out.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		barillet.h \
		deplacement.h \
		comportement_strategie.h \
		comportement.h \
		geom2D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o comportement_strategie.o comportement_strategie.cpp

comportement_async.o: comportement_async.cpp comportement_async.h \
		trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		comportement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o comportement_async.o comportement_async.cpp

comportement_eye.o: comportement_eye.cpp comportement_eye.h \
		trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		comportement_async.h \
		comportement.h \
		eye_processing.h \
		video-pwc.h \
		video.h \
		CImg.h \
		/usr/src/linux/drivers/media/video/pwc/pwc-ioctl.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o comportement_eye.o comportement_eye.cpp

barillet.o: barillet.cpp barillet.h \
		trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o barillet.o barillet.cpp

temporal_sequence.o: temporal_sequence.cpp temporal_sequence.h \
		common.h \
		internal_state.h \
		robot_adverse.h \
		panier.h \
		trame_out.h \
		trame_binary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o temporal_sequence.o temporal_sequence.cpp

video.o: video.cpp video.h \
		CImg.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o video.o video.cpp

video-pwc.o: video-pwc.cpp video-pwc.h \
		video.h \
		CImg.h \
		/usr/src/linux/drivers/media/video/pwc/pwc-ioctl.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o video-pwc.o video-pwc.cpp

traitement_cone.o: traitement_cone.cpp traitement_cone.h \
		video-pwc.h \
		video.h \
		CImg.h \
		/usr/src/linux/drivers/media/video/pwc/pwc-ioctl.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o traitement_cone.o traitement_cone.cpp

panier.o: panier.cpp panier.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o panier.o panier.cpp

robot_adverse.o: robot_adverse.cpp robot_adverse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o robot_adverse.o robot_adverse.cpp

eye_processing.o: eye_processing.cpp eye_processing.h \
		video-pwc.h \
		video.h \
		CImg.h \
		/usr/src/linux/drivers/media/video/pwc/pwc-ioctl.h \
		video_processing.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o eye_processing.o eye_processing.cpp

obstacles.o: obstacles.cpp obstacles.h \
		geom2D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obstacles.o obstacles.cpp

geom2D.o: geom2D.cpp geom2D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o geom2D.o geom2D.cpp

algoPlanifTraj.o: algoPlanifTraj.cpp geom2D.h \
		obstacles.h \
		algoPlanifTraj.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o algoPlanifTraj.o algoPlanifTraj.cpp

deplacement.o: deplacement.cpp deplacement.h \
		trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h \
		geom2D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o deplacement.o deplacement.cpp

servo.o: servo.cpp servo.h \
		trame_in.h \
		trame_binary.h \
		common.h \
		trame_out.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o servo.o servo.cpp

lecteur.o: lecteur.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lecteur.o lecteur.cpp

moc_gui.o: moc_gui.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gui.o moc_gui.cpp

moc_task_rt.o: moc_task_rt.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_task_rt.o moc_task_rt.cpp

moc_comportement.o: moc_comportement.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_comportement.o moc_comportement.cpp

moc_comportement_async.o: moc_comportement_async.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_comportement_async.o moc_comportement_async.cpp

moc_comportement_eye.o: moc_comportement_eye.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_comportement_eye.o moc_comportement_eye.cpp

moc_traitement_cone.o: moc_traitement_cone.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_traitement_cone.o moc_traitement_cone.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

